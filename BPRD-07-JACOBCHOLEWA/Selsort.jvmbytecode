public static void SelectionSort(int[]);
    Code:
        Stack=4, Locals=4, Args_size=1
        0:	iconst_0				push contant		| 0
        1:	istore_1 				store int at 1		| i = 0
        2:	iload_1 				load int at 1 		| i
        3:	aload_0 				load arr at 0 		| arr
        4:	arraylength 			get arr legnth 		| arr.length
        5:	if_icmpge	57 			if less than jump to line 57
        8:	iload_1 				load int at 1		| i
        9:	istore_2 				store int at 2		| least = i
        10:	iload_1 				load int at 1		| i
        11:	iconst_1 				push contant 		| 1
        12:	iadd 					add two integers 	| i + 1
        13:	istore_3 				store int at 3 		| j = i + 1
        14:	iload_3 				load int at 3		| j
        15:	aload_0 				load arr at 0 		| arr
        16:	arraylength				get arr legnth 		| arr.length
        17:	if_icmpge	37 			if less than jump to line 37
        20:	aload_0					load arr at 0 		| arr
        21:	iload_3 				load int at 3 		| j
        22:	iaload					load arr elm		| arr[j]
        23:	aload_0					load arr at 0 		| arr
        24:	iload_2 				load int at 2 		| least
        25:	iaload 					load arr elm 		| arr[least]
        26:	if_icmpge	31 			if less than jump to line 32
        29:	iload_3 				load int at 3 		| j
        30:	istore_2 				store int at 2 		| least = j
        31:	iinc	3, 1 			increment i 		| j++
        34:	goto	14 				goto line 14
        37:	aload_0 				load arr at 0 		| arr
        38:	iload_1 				load int at 1 		| i
        39:	iaload 					load arr elm 		| arr[i]
        40:	istore_3 				store int at 3 		| tmp = arr[i]
        41:	aload_0 				load arr at 0 		| arr
        42:	iload_1					load int at 1 		| i
        43:	aload_0 				load arr at 0 		| arr
        44:	iload_2 				load int at 2 	 	| least
        45:	iaload 					load arr elm 		| arr[least]
        46:	iastore 				store at arr elm 	| arr[i] = arr[least]
        47:	aload_0 				load arr at 0 		| arr
        48:	iload_2 				load int at 2 		| least
        49:	iload_3 				load int at 3 		| tmp
        50:	iastore 				store at arr elm 	| arr[least] = tmp
        51:	iinc	1, 1 			increment i 		| i++
        54:	goto	2 				goto prog line 2
        57:	return					return
    LineNumberTable: 
        line 21: 0
        line 22: 8
        line 23: 10
        line 24: 20
        line 25: 29
        line 23: 31
        line 26: 37
        line 21: 51
        line 28: 57

  StackMapTable: number_of_entries = 5
   frame_type = 252 /* append */
     offset_delta = 2
     locals = [ int ]
   frame_type = 253 /* append */
     offset_delta = 11
     locals = [ int, int ]
   frame_type = 16 /* same */
   frame_type = 250 /* chop */
     offset_delta = 5
   frame_type = 249 /* chop */
     offset_delta = 19


